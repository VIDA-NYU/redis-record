version: '3'

services:
  record:
    build: .
    container_name: redis-record
    ports:
     - 8000:8000
    volumes:
      - ./redis_streamer:/src/redis_streamer
    environment:
      REDIS_URL: redis://redis:6379
      # DISABLE_MULTI_DEVICE_PREFIXING: "1"
    depends_on:
      - redis
    restart: unless-stopped

  replay:
    build: .
    container_name: redis-replay
    command: -m redis-record.replay
    ports:
     - 8000:8000
    volumes:
      - ./redis_streamer:/src/redis_streamer
    environment:
      REDIS_URL: redis://redis:6379
      # DISABLE_MULTI_DEVICE_PREFIXING: "1"
    depends_on:
      - redis
    restart: unless-stopped

  # Remove this if you already have a redis instance
  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - ./redis/redis_6789.conf:/usr/local/etc/redis/redis.conf
    environment:
      ALLOW_EMPTY_PASSWORD: 'yes'
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping healthcheck | grep healthcheck"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5

  # # a dashboard to view redis - fully optional
  # redisinsight:
  #   image: redislabs/redisinsight:latest
  #   container_name: redisinsight
  #   restart: unless-stopped
  #   depends_on:
  #     - redis
  #   ports:
  #     - '8035:8001'

  # # future work: store recordings in s3 file storage
  # minio:
  #   image: minio/minio
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   volumes:
  #     - ./recordings:/data
  #   environment:
  #     MINIO_ROOT_USER: masoud
  #     MINIO_ROOT_PASSWORD: Strong#Pass#2022
  #   command: server --console-address ":9001" /data